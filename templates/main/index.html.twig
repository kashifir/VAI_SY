{% extends 'base.html.twig' %}

{% block title %}Hello MainController!{% endblock %}

{% block body %}
    <style>
        #result {
            border: 2px dashed #666;
            margin: 20px;
            padding: 5px;
            font-family: "Arial";
        }

        .main {
            display: grid;
            grid-template-columns: 30% 70%;
        }
    </style>
    <div class="main">

        <div class="dropzone my-dropzone" id="form_snippet_image" action="{{ path('api_v1_test') }}">
        </div>
        <div class="json">
            <pre id="result"> </pre>
        </div>
    </div>

{% endblock %}
{% block javascripts %}
    <script src="https://code.jquery.com/jquery-3.6.0.js"
            integrity="sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=" crossorigin="anonymous"></script>
    <script>
        Dropzone.autoDiscover = false;
        $(function () {
            uploader = new Dropzone(".dropzone", {
                url: "{{ path('api_v1_test') }}",
                paramName: "file",
                uploadMultiple: false,
                addRemoveLinks: true,
                forceFallback: false,
            });//end drop zone

            uploader.on("success", function (file, response) {
                var mainContainer = document.getElementById("result");

                response.forEach(element => {
                    var div = document.createElement("div");
                    var jsonStr = JSON.stringify(element);
                    var regeStr = '',
                        f = {
                            brace: 0
                        }; // for tracking matches, in particular the curly braces

                    regeStr = jsonStr.replace(/({|}[,]*|[^{}:]+:[^{}:,]*[,{]*)/g, function (m, p1) {
                        var rtnFn = function () {
                                return '<div style="text-indent: ' + (f['brace'] * 20) + 'px;">' + p1 + '</div>';
                            },
                            rtnStr = 0;
                        if (p1.lastIndexOf('{') === (p1.length - 1)) {
                            rtnStr = rtnFn();
                            f['brace'] += 1;
                        } else if (p1.indexOf('}') === 0) {
                            f['brace'] -= 1;
                            rtnStr = rtnFn();
                        } else {
                            rtnStr = rtnFn();
                        }
                        return rtnStr;
                    });

                    div.innerHTML += regeStr;
                    mainContainer.appendChild(div);
                });
            });
        });//end jq
    </script>
{% endblock %}



